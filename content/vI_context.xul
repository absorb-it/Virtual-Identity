<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - This program is free software; you can redistribute it and/or modify
   - it under the terms of the GNU General Public License as published by
   - the Free Software Foundation; either version 2 of the License, or
   - (at your option) any later version.

   - This program is distributed in the hope that it will be useful,
   - but WITHOUT ANY WARRANTY; without even the implied warranty of
   - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   - GNU General Public License for more details.

   - You should have received a copy of the GNU General Public License
   - along with this program; if not, write to the Free Software
   - Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

   - The Original Code is the Virtual Identity Extension.

   - The Initial Developer of the Original Code is Rene Ejury.
   - Portions created by the Initial Developer are Copyright (C) 2007
   - the Initial Developer. All Rights Reserved.

   - Contributor(s):
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE overlay [
<!ENTITY % dataTreeDTD SYSTEM "chrome://v_identity/locale/vI_rdfDataEditor.dtd">
%dataTreeDTD;
<!ENTITY % vIdentDTD SYSTEM "chrome://v_identity/locale/v_identity.dtd">
%vIdentDTD;
<!ENTITY % abMainWindowDTD SYSTEM "chrome://messenger/locale/addressbook/abMainWindow.dtd" >
%abMainWindowDTD;
]>

<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<script type="application/x-javascript">
	Components.utils.import("resource://v_identity/vI_nameSpaceWrapper.js");
    virtualIdentityExtension.ns(function() { with (virtualIdentityExtension.LIB) {
    
    Components.utils.import("resource://v_identity/vI_rdfDatasource.js", virtualIdentityExtension);
    Components.utils.import("resource://v_identity/vI_prefs.js", virtualIdentityExtension);
    
    var vI_context = {
      observe: function(subject, topic, data) {
        document.getElementById("virtualIdentityExtension_vIMenu").setAttribute("hidden", 
          !virtualIdentityExtension.vIprefs.get("menu_entry"));
      }
	}
	window.addEventListener("load", function(e) {
      virtualIdentityExtension.vIprefs.addObserver("menu_entry", vI_context.observe);
      vI_context.observe();
	}, false);
	window.addEventListener("unload", function(e) {
      virtualIdentityExtension.vIprefs.removeObserver("menu_entry", vI_context.observe);
	}, false);
	}});
	</script>
	
	<menupopup id="taskPopup">
		<menu id="virtualIdentityExtension_vIMenu" hidden="true" label="&vident.vI_Menu.label;">
			<menupopup>
				<menuitem label="&vident.vI_Menu.Settings.label;"
					  oncommand="window.open('chrome://v_identity/content/prefDialog/vI_prefDialog.xul', '', 'chrome, dialog, alwaysRaised, resizable=yes');" />
                <menu label="&vident.vI_Menu.DataStorage.label;">
                    <menupopup>                        
                        <menuitem label="&vident.vI_Menu.DataEditor.label;"
                            oncommand="window.open('chrome://v_identity/content/vI_rdfDataTree.xul', '', 'chrome, dialog, resizable=yes');" />
                        <menuitem label="&importCmd.label;" accesskey="&importCmd.accesskey;" oncommand="var vI_localRdfDatasource = new virtualIdentityExtension.rdfDatasourceImporter(window, 'virtualIdentity_0.10.rdf');"/>
                        <menuitem label="&exportCmd.label;" accesskey="&exportCmd.accesskey;" oncommand="var vI_localRdfDatasource = new virtualIdentityExtension.rdfDatasource(window); vI_localRdfDatasource.export('virtualIdentity_0.10.rdf')"/>
                    </menupopup>
                </menu>
			</menupopup>
		</menu>
	</menupopup> 
</overlay>
